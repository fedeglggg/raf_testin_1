{"ast":null,"code":"var _jsxFileName = \"I:\\\\Dev\\\\React\\\\testing-rafam\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport CardRafam from './CardRafam.js';\n/* \n  --Dudas--\n  Donde poner el divider\n  \n  --Otras Cosas--\n  Se podría pedir el contenido del modal en props tmb para hacerlo dinamico o simplemente pedir el modal\n  o en el link del header pasarle el handle que abra un modal, este estaria afuera, aca suponemos que\n  todos las card van a abrir un modal\n*/\n\n/* Props que recibe, iría en el story y despues agregar arriba en App({}) */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst content = \"Contenido del card\";\n/* aca podría ir una tabla u otra cosa */\n\nconst buttonProps = {\n  text: \"Designar Persona\",\n  variant: \"outlined\",\n  color: \"secondary\",\n  disabled: true,\n  clickHandle: alertar => alert('Boton Final Clickeado')\n};\nconst headerProps = {\n  title: \"Datos de persona*\",\n  linkText: \"+Asignar Persona\"\n};\n/* Fin Props */\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardRafam, {\n      headerProps: headerProps,\n      content: content,\n      buttonProps: buttonProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["I:/Dev/React/testing-rafam/src/App.js"],"names":["React","CardRafam","content","buttonProps","text","variant","color","disabled","clickHandle","alertar","alert","headerProps","title","linkText","App"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACA,MAAMC,OAAO,GAAG,oBAAhB;AAAsC;;AACtC,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAC,kBADa;AAElBC,EAAAA,OAAO,EAAC,UAFU;AAGlBC,EAAAA,KAAK,EAAC,WAHY;AAIlBC,EAAAA,QAAQ,EAAC,IAJS;AAKlBC,EAAAA,WAAW,EAAEC,OAAO,IAAKC,KAAK,CAAC,uBAAD;AALZ,CAApB;AAOA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAC,mBADY;AAElBC,EAAAA,QAAQ,EAAC;AAFS,CAApB;AAIA;;AAEF,SAASC,GAAT,GAAe;AAEb,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEH,WAAxB;AAAqC,MAAA,OAAO,EAAET,OAA9C;AAAuD,MAAA,WAAW,EAAEC;AAApE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAPQW,G;AAST,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport CardRafam from './CardRafam.js'\n\n/* \n  --Dudas--\n  Donde poner el divider\n  \n  --Otras Cosas--\n  Se podría pedir el contenido del modal en props tmb para hacerlo dinamico o simplemente pedir el modal\n  o en el link del header pasarle el handle que abra un modal, este estaria afuera, aca suponemos que\n  todos las card van a abrir un modal\n*/\n  /* Props que recibe, iría en el story y despues agregar arriba en App({}) */\n  const content = \"Contenido del card\"; /* aca podría ir una tabla u otra cosa */\n  const buttonProps = {\n    text:\"Designar Persona\",\n    variant:\"outlined\",\n    color:\"secondary\",\n    disabled:true,\n    clickHandle: alertar => (alert('Boton Final Clickeado')),\n  }\n  const headerProps = {\n    title:\"Datos de persona*\",\n    linkText:\"+Asignar Persona\",\n  }\n  /* Fin Props */\n\nfunction App() {\n\n  return (\n    <div>\n      <CardRafam headerProps={headerProps} content={content} buttonProps={buttonProps}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}